name: Windows-msvc
on:
 push:
  
# pull_requestï¼š
    tags: 
      - 'v*'

env:
  BUILD_TYPE: Release

jobs:
  create_release:
    runs-on: windows-2019
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      get_version: ${{ steps.get_version.outputs.version }}
    name: Create release
    steps:
    - name: Get Version
      id: get_version
      uses: battila7/get-version-action@v2
    - run: echo ${{ steps.get_version.outputs.version }}
    - run: echo ${{ steps.get_version.outputs.version-without-v }}
      env: 
       get_version: ${{ steps.get_version.outputs.version }}
    - name: Get current time
      uses: srfrnk/current-time@master
      id: current-time
      with: 
        format: YYMMDD
    - name: Use current time
      env:
        TIME: "${{ steps.current-time.outputs.time }}"
        F_TIME: "${{ steps.current-time.outputs.formattedTime }}"
      run: |
       echo $TIME
       echo ${{ github.ref }}
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.1.4
      env:
         upload_url: ${{ steps.create_release.outputs.upload_url }}
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
       tag_name: ${{ steps.get_version.outputs.version }}
       release_name: TrinityCore-NPCBOT-Eluna-zhCN_${{ steps.get_version.outputs.version }}
       body: |
              ${{ steps.Changelog.outputs.changelog }}    
                   
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - uses: suisei-cn/actions-download-file@v1
      id: downloadfile
      name: Download prebuilt OpenCV
      with:
        url: "https://actiona.tools/files/opencv-4.5.1-x64-vc16.7z"

    - name: Extract OpenCV
      run: 7z x -oopencv ${{ steps.downloadfile.outputs.filename }}

    - name: setup-msbuild
      uses: microsoft/setup-msbuild@v1

    - name: Install Qt
      uses: jurplel/install-qt-action@v2.12.2
      with:
        version: 5.15.2
        arch: win64_msvc2019_64
        modules: 'qtscript'

    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{github.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DACT_PROFILE=${{ matrix.profile }} -DACT_UPDATER=${{ matrix.updater }} -G "Visual Studio 16 2019" -DOpenCV_DIR=$GITHUB_WORKSPACE/opencv/x64/vc16/lib
      env:
        BOOST_ROOT: ${{ steps.install-boost.outputs.BOOST_ROOT }}

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: cmake --build . --config $BUILD_TYPE --parallel 2

    - name: Test
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: ctest -C $BUILD_TYPE
  build-windowsx86:
    needs: [create_release]
    runs-on: windows-latest
    env:
         OPENSSL_DIR: C:\OpenSSL
         MYSQL_HOME: C:\mysql-5.7.31-win32
         Boost_DIR: C:\boost
         OPENSSL_VERSION: 1_1_1i
         BITS: 32
    steps:
  
    - name: 7zip pack
      uses: DuckSoft/create-7z-action@v1.0
      with:
      # file/folder path to compress
        pathSource: ${{ github.workspace }}/build
    # 7z archive path to write
        pathTarget: \TrinityCore-NPCBOT-Eluna-zhCN_${{ needs.create_release.outputs.get_version }}_win32.7z
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
         upload_url: ${{ needs.create_release.outputs.upload_url }}
         asset_path: \TrinityCore-NPCBOT-Eluna-zhCN_${{ needs.create_release.outputs.get_version }}_win32.7z
         asset_name: TrinityCore-NPCBOT-Eluna-zhCN_${{ needs.create_release.outputs.get_version }}_win32.7z
         asset_content_type: application/7z
  
